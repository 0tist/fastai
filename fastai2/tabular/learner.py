#AUTOGENERATED! DO NOT EDIT! File to edit: dev/42_tabular.learner.ipynb (unless otherwise specified).

__all__ = ['tabular_learner']

#Cell
from ..basics import *
from .core import *
from .model import *

#Cell
@delegates(Learner.__init__)
def tabular_learner(dbunch, layers, emb_szs=None, config=None, **kwargs):
    "Get a `Learner` using `data`, with `metrics`, including a `TabularModel` created using the remaining params."
    if config is None: config = tabular_config()
    to = dbunch.train_ds
    emb_szs = get_emb_sz(dbunch.train_ds, {} if emb_szs is None else emb_szs)
    model = TabularModel(emb_szs, len(dbunch.cont_names), get_c(dbunch), layers, **config)
    return Learner(dbunch, model, **kwargs)

#Cell
@typedispatch
def show_results(x:Tabular, y:Tabular, samples, outs, ctxs=None, max_n=10, **kwargs):
    df = x.all_cols[:max_n]
    df[to.y_names+'_pred'] = y[to.y_names][:max_n].values
    display_df(df)